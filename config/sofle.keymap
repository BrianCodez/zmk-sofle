#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        flavor = "balanced";
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 52 53 54 55 56 57 59 60 61 62 63>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
    };

    hml: hml {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
        hold-trigger-key-positions = <11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 59 60 61 62 63 7 8 9 10 53 54 55 56 57>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1           &kp N2           &kp N3             &kp N4        &kp N5     &kp UP_ARROW     &kp N6     &kp N7         &kp N8              &kp N9            &kp N0          &kp BACKSPACE
&kp TAB     &kp Q            &kp W            &kp E              &kp R         &kp T      &kp DOWN_ARROW   &kp Y      &kp U          &kp I               &kp O             &kp P           &kp BSLH
&kp CAPS    &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LCTRL F  &kp G      &kp LEFT_ARROW   &kp H      &hmr RCTRL J   &hmr RIGHT_SHIFT K  &hmr RIGHT_ALT L  &hmr RGUI SEMI  &kp APOS
&kp LSHFT   &kp Z            &kp X            &kp C              &kp V         &kp B      &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA           &kp DOT           &kp FSLH        &kp ESCAPE
&kp K_MUTE  &kp CAPS         &kp LEFT_GUI     &kp ESC            &lt 1 SPACE   &kp TAB    &kp ENTER        &kp ENTER  &kp BACKSPACE  &lt 3 DELETE        &lt 4 DELETE      &to 5
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp LGUI         &kp LALT        &kp LSHFT        &kp LCTRL        &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        number {
            bindings = <
&trans  &kp LEFT_BRACE  &trans                &trans                 &trans        &kp RIGHT_BRACE    &kp UP     &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp LBKT        &kp N7                &kp N8                 &kp NUMBER_9  &kp RBKT           &kp DOWN   &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI        &kp N4                &kp N5                 &kp N6        &kp EQUAL          &kp LEFT   &trans  &kp RCTRL  &kp RSHFT  &kp RALT  &kp RGUI  &trans
&trans  &kp GRAVE       &kp N1                &kp N2                 &kp N3        &kp FSLH           &kp RIGHT  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp BACKSLASH   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp N0        &kp MINUS          &kp ENTER  &trans  &trans     &trans     &trans    &trans
            >;
        };

        func {
            bindings = <
&trans  &trans        &kp F10  &kp F11  &kp F12  &trans             &kp UP     &trans  &trans     &trans     &trans    &trans    &trans
&trans  &bt BT_SEL 2  &kp F7   &kp F8   &kp F9   &rgb_ug RGB_BRD    &kp DOWN   &trans  &trans     &trans     &trans    &trans    &trans
&trans  &bt BT_SEL 1  &kp F4   &kp F5   &kp F6   &rgb_ug RGB_BRI    &kp LEFT   &trans  &kp RCTRL  &kp RSHFT  &kp RALT  &kp RGUI  &trans
&trans  &bt BT_SEL 0  &kp F1   &kp F2   &kp F3   &rgb_ug RGB_TOG    &kp RIGHT  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &trans        &trans   &trans   &kp TAB  &kp SPACE          &kp ENTER  &trans  &trans     &trans     &trans    &trans
            >;
        };

        gaming {
            display-name = "LAYER0";
            bindings = <
&kp ESC     &kp N1        &kp N2     &kp N3          &kp N4     &kp N5     &kp UP_ARROW     &kp N6     &kp N7         &kp N8     &kp N9        &kp N0    &kp BACKSPACE
&kp TAB     &kp Q         &kp W      &kp E           &kp R      &kp T      &kp DOWN_ARROW   &kp Y      &kp U          &kp I      &kp O         &kp P     &kp BSLH
&kp CAPS    &kp A         &kp S      &kp D           &kp F      &kp G      &kp LEFT_ARROW   &kp H      &kp J          &kp K      &kp L         &kp SEMI  &kp APOS
&kp LCTRL   &kp Z         &kp X      &kp C           &kp V      &kp B      &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA  &kp DOT       &kp FSLH  &kp ENTER
&kp C_MUTE  &kp LEFT_ALT  &kp ENTER  &kp LEFT_SHIFT  &kp SPACE  &kp TAB    &kp ENTER        &kp ENTER  &kp BACKSPACE  &kp LWIN   &lt 4 DELETE  &to 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };
};
